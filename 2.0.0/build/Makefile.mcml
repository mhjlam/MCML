# MCML 2.0.0 - Monte Carlo Multi-Layered simulation
# Makefile for building MCML only (cross-platform, based on 2.1.0 style)

PROJECT = mcml
VERSION = 2.0.0
SRCDIR = ../src/mcml
BINDIR = ../bin

# Platform detection and cross-platform commands
ifeq ($(OS),Windows_NT)
	SHELL = cmd.exe
	EXEEXT = .exe
	MKDIR_P = if not exist "$(BINDIR)" mkdir "$(BINDIR)"
	RM = del /Q
	DEVNULL = NUL
	# Use gcc by default, user can override with make CC=clang or make CC=cl
	CC = gcc
	ifeq ($(CC),cl)
		CFLAGS = /EHsc /W3 /O2
		LIBS =
		COMPILER_FOUND = cl
	else
		CFLAGS = -g -Wall -ansi -fno-common
		LIBS = -lm
		COMPILER_FOUND = $(CC)
	endif
else
	EXEEXT =
	MKDIR_P = mkdir -p $(BINDIR)
	RM = rm -f
	DEVNULL = /dev/null
	CC = cc
	CFLAGS = -g -Wall -ansi -fno-common
	LIBS = -lm
	COMPILER_FOUND = $(CC)
endif

TARGET = $(BINDIR)/$(PROJECT)$(EXEEXT)
SRCS = $(SRCDIR)/mcmlgo.c $(SRCDIR)/mcmlio.c $(SRCDIR)/mcmlmain.c
OBJS = mcmlgo.o mcmlio.o mcmlmain.o
HEADERS = $(SRCDIR)/mcml.h

all: $(BINDIR) $(TARGET)
	@echo Built with $(COMPILER_FOUND) compiler

$(BINDIR):
	$(MKDIR_P)

$(TARGET): $(OBJS)
ifeq ($(CC),cl)
	$(CC) $(CFLAGS) $(addprefix ./,$(OBJS)) /Fe$@ $(LIBS)
else
	$(CC) $(CFLAGS) -o $@ $(OBJS) $(LIBS)
endif

%.o: $(SRCDIR)/%.c $(HEADERS)
	$(CC) $(CFLAGS) -c $< -o $@

# Test with sample input files
test: $(TARGET) copy-samples
	@echo Testing MCML 2.0.0...
ifeq ($(OS),Windows_NT)
	@if not exist "test" mkdir "test"
	@echo Running: $(PROJECT)$(EXEEXT) sample/template.mci
	@cd $(BINDIR) && $(PROJECT)$(EXEEXT) sample/template.mci && move *.mco ../build/test/ >$(DEVNULL) 2>&1 || echo.
	@echo Running: $(PROJECT)$(EXEEXT) sample/sample1.mci
	@cd $(BINDIR) && $(PROJECT)$(EXEEXT) sample/sample1.mci && move *.mco ../build/test/ >$(DEVNULL) 2>&1 || echo.
	@echo Running: $(PROJECT)$(EXEEXT) sample/sample2.mci
	@cd $(BINDIR) && $(PROJECT)$(EXEEXT) sample/sample2.mci && move *.mco ../build/test/ >$(DEVNULL) 2>&1 || echo.
else
	@mkdir -p test
	@echo Running: $(PROJECT)$(EXEEXT) sample/template.mci
	@cd $(BINDIR) && ./$(PROJECT)$(EXEEXT) sample/template.mci && mv *.mco ../build/test/ 2>$(DEVNULL) || true
	@echo Running: $(PROJECT)$(EXEEXT) sample/sample1.mci
	@cd $(BINDIR) && ./$(PROJECT)$(EXEEXT) sample/sample1.mci && mv *.mco ../build/test/ 2>$(DEVNULL) || true
	@echo Running: $(PROJECT)$(EXEEXT) sample/sample2.mci
	@cd $(BINDIR) && ./$(PROJECT)$(EXEEXT) sample/sample2.mci && mv *.mco ../build/test/ 2>$(DEVNULL) || true
endif
	@echo MCML test completed. Output files saved to test/

# Copy sample files to bin directory
copy-samples: $(BINDIR)
ifeq ($(OS),Windows_NT)
	@echo Copying sample files to bin directory...
	@if exist "$(SRCDIR)\..\sample" ( \
		if not exist "$(BINDIR)\sample" mkdir "$(BINDIR)\sample" && \
		xcopy /E /Y "$(SRCDIR)\..\sample\*" "$(BINDIR)\sample\" >$(DEVNULL) 2>&1 \
	) else ( \
		echo Warning: sample directory not found \
	)
else
	@echo Copying sample files to bin directory...
	@if [ -d "$(SRCDIR)/../sample" ]; then \
		mkdir -p "$(BINDIR)/sample" && \
		cp -r "$(SRCDIR)/../sample/"* "$(BINDIR)/sample/" 2>$(DEVNULL) || true; \
	else \
		echo Warning: sample directory not found; \
	fi
endif

clean:
	$(RM) $(OBJS)
	$(RM) *.mco
ifeq ($(OS),Windows_NT)
	@if exist "$(TARGET)" del /Q "$(TARGET)" >$(DEVNULL) 2>&1 || echo.
	@if exist "test" rmdir /S /Q "test" >$(DEVNULL) 2>&1 || echo.
	@if exist "$(BINDIR)\sample" rmdir /S /Q "$(BINDIR)\sample" >$(DEVNULL) 2>&1 || echo.
else
	$(RM) $(TARGET)
	@rm -rf test 2>$(DEVNULL) || true
	@rm -rf "$(BINDIR)/sample" 2>$(DEVNULL) || true
endif

.PHONY: all clean test copy-samples
